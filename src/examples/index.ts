export const examples = {
  "0000_overview": {
    cmpt: require('./0000_overview'),
    content: "import React from 'react'\nimport { Text } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\n\nconst Example = () => {\n  const {FirstNameDisplay, FirstName} = Text({\n    name: \"firstName\",\n    validate: validateName\n  })\n  \n  return (\n    <>\n      <FirstName /> {/* form input */}\n      <FirstNameDisplay full={true} />\n    </>\n  )\n}\n\nexport default Example"
  },"0010_field": {
    cmpt: require('./0010_field'),
    content: "import React, { useState } from 'react'\nimport { field } from '@zecos/field'\nimport { validateName } from \"@zecos/validate\"\n\nconst renderErrors = state => {\n  const {touched, errors} = state\n  if (touched && errors.length) {\n    return (\n      <span style={{color: \"red\"}}>\n        {errors.map(err => <div>{err.toString()}</div>)}\n      </span>\n    )\n  }\n}\n\nconst Form = () => {\n  const [[actions, state], _setFormState] = useState(() => {\n    const _field = field({\n      init: '',\n      validate: validateName,\n    })\n    return [_field, _field.getState()]\n  })\n  \n  const {\n    setValue,\n    setTouched,\n    reset,\n    setState,\n    getState\n  } = actions\n  \n  const setFormState = state => _setFormState([actions, state])\n  \n  const {\n    errors,\n    value,\n    touched,\n    pristine\n  } = actions.getState()\n  \n  return (\n    <form style={{padding: 20}}>\n      <label htmlFor=\"name\">Name: </label>&nbsp;\n      <input\n        name=\"name\"\n        value={value}\n        onChange={e => setFormState(setValue(e.target.value))}\n        onBlur={_ => setFormState(setTouched())}\n      />\n      <br />\n      {renderErrors(state)}\n    </form>\n  )\n}\n\nexport default Form\n"
  },"0020_create-input": {
    cmpt: require('./0020_create-input'),
    content: "import React from \"react\"\nimport { createInput } from '@zecos/input'\nimport { validateName } from \"@zecos/validate\"\n\nconst text = createInput(({helpers, state}) => {\n    const {\n      id,\n      name,\n      label,\n      handleChange,\n      handleBlur,\n    } = helpers\n    \n    const {touched, errors, value} = state\n    return (\n      <div>\n        <label htmlFor={name}>\n          {label}: &nbsp;\n        {touched && errors[0] && errors[0].toString()}\n        </label>\n        <input\n          name={name}\n          aria-label={label}\n          onChange={handleChange}\n          value={value}\n          onBlur={handleBlur}\n          id={id}\n        />\n      </div> \n    )\n})\n\nconst Form = () => {\n  const {FirstName, FirstNameDisplay} = text({\n    name: \"firstName\",\n    validate: validateName,\n    init: \"Bob\",\n  })\n\n  return (\n    <form className=\"form\">\n      <FirstName /><br />\n      <FirstNameDisplay full={true} />\n    </form> \n  )\n}\n\nexport default Form"
  },"0030_create-input-select": {
    cmpt: require('./0030_create-input-select'),
    content: "import React from 'react'\nimport { createInput } from '@zecos/input'\n\nconst renderOption = ([key, label]) => {\n  return (\n    <option key={key} value={key}>\n      {label}\n    </option>\n  )\n}\n\nexport const select = createInput(({helpers, props}) => {\n  const {\n    id,\n    name,\n    value,\n    handleChange,\n    handleBlur,\n    label,\n    htmlFor,\n  } = helpers\n\n  return (\n    <div>\n      <label htmlFor={htmlFor}>\n        {label}: &nbsp;\n      </label>\n      <select\n        onChange={handleChange}\n        onBlur={handleBlur}\n        name={name}\n        id={id}\n        value={value}\n        aria-label={label}\n      >\n        {Object.entries(props.options).map(renderOption)}\n      </select>\n    </div>\n  )\n})\n\nexport const Form = () => {\n  const {FavoriteColor, FavoriteColorDisplay} = select({\n    init: \"blue\",\n    name: \"favoriteColor\",\n    props: {\n     options: {green: \"Green\", blue: \"Blue\"} \n    }\n  })\n\n  return (\n    <form className=\"form\">\n      <FavoriteColor options={{blue: \"Blue\", red: \"Red\"}} />\n      <FavoriteColorDisplay />\n    </form>\n  )\n}\n\nexport default Form"
  },"0040_create-layout": {
    cmpt: require('./0040_create-layout'),
    content: "import React from 'react'\nimport { createLayout } from \"@zecos/input\"\nimport { Text, Select, TextArea } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\nconst SimpleFormLayout = createLayout(({props, items, errors, helpers}) => {\n  return (\n    <form {...props}>\n      <div>{helpers.title}</div>\n      {errors[0] && errors[0].toString()}\n      {items.map((Input, i) => (\n        <span key={i}><Input.Cmpt key={i} /></span>\n      ))}\n    </form>\n  )\n})\n\nconst Example = () => {\n  const { Form, FormDisplay } = SimpleFormLayout({\n    name: 'form',\n    items: [\n      Text({\n        validate: validateName,\n        name: \"firstName\",\n        init: \"Zane\",\n      }),\n      TextArea({\n        name: \"describeYourself\"\n      }),\n      Select({\n        init: \"blue\",\n        name: \"favoriteColor\",\n        props: {\n          options: {\n            \"Blue\": \"blue\",\n            \"Red\": \"red\",\n          }\n        }\n      })\n    ],\n    validate: (items:any) => {\n      if (items[0].state.value === \"Zane\") {\n        return [new Error(\"Name cannot be Zane\")]\n      }\n      return []\n    }\n  })\n  \n  return (\n    <div>\n      <Form />\n      <FormDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0050_create-multi": {
    cmpt: require('./0050_create-multi'),
    content: "import React from 'react'\nimport { TextInput, SimpleFormLayout } from '@zecos/input-mui'\nimport { Button } from '@material-ui/core'\nimport { validateName } from '@zecos/validate'\nimport { createMulti } from '@zecos/input'\n\n\nconst Multi:any = createMulti(({items}) => {\n  return <>\n    {items.map((Input, i) => <Input.Cmpt key={i} />)}\n  </>\n})\n\nconst newSimple = () => SimpleFormLayout({\n  name: 'form',\n  items: [\n    TextInput({\n      validate: validateName,\n      name: \"firstName\"\n    }),\n    TextInput({\n      validate: validateName,\n      name: \"lastName\",\n    }),\n  ],\n})\n\nconst MultiForm = () => {\n  const {actions, FirstNames} = Multi({\n    init: [\n      newSimple()\n    ],\n    name: \"firstNames\",\n  })\n  \n  return <div>\n      <FirstNames />\n      <Button variant=\"contained\" onClick={() => actions.push(newSimple)}>Add Name</Button>\n    </div>\n}\n\n\nexport default MultiForm"
  },"0060_text-input": {
    cmpt: require('./0060_text-input'),
    content: "import React from \"react\"\nimport { validateName } from \"@zecos/validate\"\nimport { TextInput} from \"@zecos/input-mui\"\n\nconst TextInputExample = () => {\n  const {FirstName, FirstNameDisplay} = TextInput({\n    validate: validateName,\n    init: '',\n    name: \"firstName\"\n  })\n\n  return (\n    <>\n    <form className=\"form\">\n      <FirstName />\n      <FirstNameDisplay />\n    </form>\n    <br />\n    {/* display the data */}\n    </>\n  )\n}\n \nexport default TextInputExample"
  },"0070_select-input": {
    cmpt: require('./0070_select-input'),
    content: "import React from \"react\"\nimport { SelectInput } from \"@zecos/input-mui\"\n\nconst SelectInputExample = () => {\n  const {FavoriteColor, FavoriteColorDisplay} = SelectInput({\n    init: \"blue\",\n    name: \"favoriteColor\",\n  })\n\n  return (\n    <>\n    <form className=\"form\">\n      <FavoriteColor options={{\n        Blue: \"blue\",\n        Red: \"red\",\n      }}/>\n      <FavoriteColorDisplay />\n    </form>\n    <br />\n    {/* display the data */}\n    </>\n  )\n}\n \nexport default SelectInputExample\n"
  },"0080_library-general": {
    cmpt: require('./0080_library-general'),
    content: "import React from 'react'\nimport { Text } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\n\nconst Example = () => {\n  const {FirstNameDisplay, Cmpt} = Text({\n    name: \"firstName\",\n    validate: validateName\n  })\n  \n  return (\n    <>\n      <Cmpt /> {/* form input */}\n      <FirstNameDisplay full={true} />\n    </>\n  )\n}\n\nexport default Example"
  },"0090_library-replaced": {
    cmpt: require('./0090_library-replaced'),
    content: "import React from 'react'\nimport { Text } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\n\nconst Example = () => {\n  const {Display, FirstName, Cmpt, FirstNameDisplay} = Text({\n    name: \"firstName\",\n    validate: validateName\n  })\n  \n  return (\n    <>\n      <FirstName />\n      <Cmpt />  {/* same as above line */}\n      <Display full={true} />\n      <FirstNameDisplay full={true} /> {/* same as above line */}\n      <FirstNameDisplay /> {/* Without the \"full\" property, it just gets the value */}\n    </>\n  )\n}\n\nexport default Example"
  },"0100_library-logging": {
    cmpt: require('./0100_library-logging'),
    content: "import React from 'react'\nimport { Text } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\nimport { Button } from '@material-ui/core'\n\n\nconst Example = () => {\n  const {FirstName, Display, log, logFirstName} = Text({\n    name: \"firstName\",\n    validate: validateName\n  })\n  \n  return (\n    <>\n      <FirstName />\n      <Display />\n      <br />\n      <Button variant=\"contained\" onClick={log}>Log First Name Data</Button>\n      <br />\n      <br />\n      <div>These two buttons are equivalent. Check the console.</div>\n      <br />\n      <Button variant=\"contained\" onClick={logFirstName}>Log First Name Data</Button>\n    </>\n  )\n}\n\nexport default Example"
  }
}